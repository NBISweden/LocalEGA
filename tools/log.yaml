version: 1
root:
  level: NOTSET
  handlers: [noHandler]

loggers:
  asyncio:
    level: DEBUG
    handlers: [console]
  ingestion:
    level: DEBUG
    handlers: [ingestionFile] #[console,ingestionRotatingFile,ingestionEmail]
  worker:
    level: DEBUG
    handlers: [workerFile]
    propagate: no
  vault:
    level: DEBUG
    handlers: [vaultFile]
    propagate: no
  verify:
    level: DEBUG
    handlers: [verifyFile]
    propagate: no
  amqp:
    level: DEBUG
    handlers: [amqpFile]
    propagate: no
  db:
    level: DEBUG
    handlers: [dbFile]
    propagate: no
  crypto:
    level: DEBUG
    handlers: [cryptoFile]

handlers:
  noHandler:
    class: logging.NullHandler
    level: NOTSET
  console:
    class: logging.StreamHandler
    formatter: simple
    stream: ext://sys.stdout
  ingestionFile:
    class: logging.FileHandler
    formatter: legaSmall
    filename: 'logs/ingestion.log'
  vaultFile:
    class: logging.FileHandler
    formatter: legaSmall
    filename: 'logs/vault.log'
  verifyFile:
    class: logging.FileHandler
    formatter: legaSmall
    filename: 'logs/verify.log'
  workerFile:
    class: logging.handlers.TimedRotatingFileHandler
    formatter: lega
    when: 'D'
    interval: 30
    encoding: 'utf-8'
    filename: 'logs/worker.log'
  cryptoFile:
    class: logging.FileHandler
    formatter: legaSmall
    filename: 'logs/crypto.log'
  amqpFile:
    class: logging.FileHandler
    formatter: lega
    filename: 'logs/amqp.log'
    mode: 'w'
  dbFile:
    class: logging.FileHandler
    formatter: lega
    filename: 'logs/db.log'
    mode: 'w'
  ingestionRotatingFile:
    class: logging.handlers.TimedRotatingFileHandler
    formatter: lega
    when: 'D'
    interval: 30
    encoding: 'utf-8'
    filename: 'logs/ingestion.log'
  ingestionEmail:
    class: logging.handlers.SMTPHandler
    mailhost: nbis.se
    fromaddr: logger@ega.se
    toaddrs: frederic.haziza@nbis.se
    subject: "Logger info"
    #credentials=None, secure=None, timeout=1.0

formatters:
  lega:
    format: '[{name}][{process:d} {processName:>15}][{levelname}][{asctime:<20}] ({lineno}) {funcName}: {message}'
    style: '{'
  legaSmall:
    format: '[{name}][PID:{process:^5d}][{levelname:^6}] {message}'
    style: '{'
  simple:
    format: '[{name:^10}][{levelname:^6}] {message}'
    style: '{'
