#!/usr/bin/env bash

set -e
#set -x

EGA='<ega-folder>'
[ -n "$1" ] && [ -d "$1" ] && EGA=$1

LOG=""
[ "$2" = '--log' ] && LOG="--log <file>"

declare -A JOB_PIDS
function cleanup {
    echo -e "\nStopping background jobs"
    kill -9 -"$$"
    # for job in ${!JOB_PIDS[@]}
    # do
    # 	SIGNAL=9
    # 	if [ "$job" = "ingestion" ]; then SIGNAL=2; fi
    # 	echo "Killing $job (pid: ${JOB_PIDS[$job]})"
    # 	kill -$SIGNAL ${JOB_PIDS[$job]} #&>/dev/null
    # done
    exit 1
}
trap 'cleanup' INT TERM #EXIT #HUP ERR
# Or just kill the parent. That should kill the processes in that process group
# trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM EXIT

echo "Starting EGA in $EGA"

pushd $EGA

# Start the frontend
ega-ingestion $LOG & JOB_PIDS['ingestion']=$!

# Start the naming service
python $EGA/tools/namer.py & JOB_PIDS['namer']=$!

# Start the vault listener
ega-vault $LOG & JOB_PIDS['vault']=$!

# re-start the GPG agent
$EGA/tools/start_agent.sh
# Start 2 workers
source $EGA/private/gpg/agent.env && ega-worker $LOG & JOB_PIDS['worker-1']=$!
source $EGA/private/gpg/agent.env && ega-worker $LOG & JOB_PIDS['worker-2']=$!

# Wait for everyone to finish
for job in ${!JOB_PIDS[@]}
do
    echo "Waiting for $job (pid: ${JOB_PIDS[$job]})"
    wait ${JOB_PIDS[$job]}
done

popd
echo "EGA is closing down"
